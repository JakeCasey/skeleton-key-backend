# source: https://us1.prisma.sh/jakeacasey/skeleton-key-backend/dev
# timestamp: Thu Apr 04 2019 19:26:53 GMT-0500 (Central Daylight Time)

type AggregatePlan {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createPlan(data: PlanCreateInput!): Plan!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updatePlan(data: PlanUpdateInput!, where: PlanWhereUniqueInput!): Plan
  deleteUser(where: UserWhereUniqueInput!): User
  deletePlan(where: PlanWhereUniqueInput!): Plan
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertPlan(where: PlanWhereUniqueInput!, create: PlanCreateInput!, update: PlanUpdateInput!): Plan!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyPlans(data: PlanUpdateManyMutationInput!, where: PlanWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyPlans(where: PlanWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  ADMIN
  USER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PERMISSIONUPDATE
}

type Plan implements Node {
  id: ID!
  planId: String!
  interval: String
  description: String
  product: String!
  usersSubscribed(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
}

"""A connection to a list of items."""
type PlanConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PlanEdge]!
  aggregate: AggregatePlan!
}

input PlanCreateInput {
  id: ID
  planId: String!
  interval: String
  description: String
  product: String!
  usersSubscribed: UserCreateManyWithoutPlansSubscribedInput
}

input PlanCreateManyWithoutUsersSubscribedInput {
  create: [PlanCreateWithoutUsersSubscribedInput!]
  connect: [PlanWhereUniqueInput!]
}

input PlanCreateWithoutUsersSubscribedInput {
  id: ID
  planId: String!
  interval: String
  description: String
  product: String!
}

"""An edge in a connection."""
type PlanEdge {
  """The item at the end of the edge."""
  node: Plan!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PlanOrderByInput {
  id_ASC
  id_DESC
  planId_ASC
  planId_DESC
  interval_ASC
  interval_DESC
  description_ASC
  description_DESC
  product_ASC
  product_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PlanPreviousValues {
  id: ID!
  planId: String!
  interval: String
  description: String
  product: String!
}

input PlanScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [PlanScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PlanScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PlanScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  planId: String

  """All values that are not equal to given value."""
  planId_not: String

  """All values that are contained in given list."""
  planId_in: [String!]

  """All values that are not contained in given list."""
  planId_not_in: [String!]

  """All values less than the given value."""
  planId_lt: String

  """All values less than or equal the given value."""
  planId_lte: String

  """All values greater than the given value."""
  planId_gt: String

  """All values greater than or equal the given value."""
  planId_gte: String

  """All values containing the given string."""
  planId_contains: String

  """All values not containing the given string."""
  planId_not_contains: String

  """All values starting with the given string."""
  planId_starts_with: String

  """All values not starting with the given string."""
  planId_not_starts_with: String

  """All values ending with the given string."""
  planId_ends_with: String

  """All values not ending with the given string."""
  planId_not_ends_with: String
  interval: String

  """All values that are not equal to given value."""
  interval_not: String

  """All values that are contained in given list."""
  interval_in: [String!]

  """All values that are not contained in given list."""
  interval_not_in: [String!]

  """All values less than the given value."""
  interval_lt: String

  """All values less than or equal the given value."""
  interval_lte: String

  """All values greater than the given value."""
  interval_gt: String

  """All values greater than or equal the given value."""
  interval_gte: String

  """All values containing the given string."""
  interval_contains: String

  """All values not containing the given string."""
  interval_not_contains: String

  """All values starting with the given string."""
  interval_starts_with: String

  """All values not starting with the given string."""
  interval_not_starts_with: String

  """All values ending with the given string."""
  interval_ends_with: String

  """All values not ending with the given string."""
  interval_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  product: String

  """All values that are not equal to given value."""
  product_not: String

  """All values that are contained in given list."""
  product_in: [String!]

  """All values that are not contained in given list."""
  product_not_in: [String!]

  """All values less than the given value."""
  product_lt: String

  """All values less than or equal the given value."""
  product_lte: String

  """All values greater than the given value."""
  product_gt: String

  """All values greater than or equal the given value."""
  product_gte: String

  """All values containing the given string."""
  product_contains: String

  """All values not containing the given string."""
  product_not_contains: String

  """All values starting with the given string."""
  product_starts_with: String

  """All values not starting with the given string."""
  product_not_starts_with: String

  """All values ending with the given string."""
  product_ends_with: String

  """All values not ending with the given string."""
  product_not_ends_with: String
}

type PlanSubscriptionPayload {
  mutation: MutationType!
  node: Plan
  updatedFields: [String!]
  previousValues: PlanPreviousValues
}

input PlanSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PlanSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PlanSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PlanSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PlanWhereInput
}

input PlanUpdateInput {
  planId: String
  interval: String
  description: String
  product: String
  usersSubscribed: UserUpdateManyWithoutPlansSubscribedInput
}

input PlanUpdateManyDataInput {
  planId: String
  interval: String
  description: String
  product: String
}

input PlanUpdateManyMutationInput {
  planId: String
  interval: String
  description: String
  product: String
}

input PlanUpdateManyWithoutUsersSubscribedInput {
  create: [PlanCreateWithoutUsersSubscribedInput!]
  connect: [PlanWhereUniqueInput!]
  set: [PlanWhereUniqueInput!]
  disconnect: [PlanWhereUniqueInput!]
  delete: [PlanWhereUniqueInput!]
  update: [PlanUpdateWithWhereUniqueWithoutUsersSubscribedInput!]
  updateMany: [PlanUpdateManyWithWhereNestedInput!]
  deleteMany: [PlanScalarWhereInput!]
  upsert: [PlanUpsertWithWhereUniqueWithoutUsersSubscribedInput!]
}

input PlanUpdateManyWithWhereNestedInput {
  where: PlanScalarWhereInput!
  data: PlanUpdateManyDataInput!
}

input PlanUpdateWithoutUsersSubscribedDataInput {
  planId: String
  interval: String
  description: String
  product: String
}

input PlanUpdateWithWhereUniqueWithoutUsersSubscribedInput {
  where: PlanWhereUniqueInput!
  data: PlanUpdateWithoutUsersSubscribedDataInput!
}

input PlanUpsertWithWhereUniqueWithoutUsersSubscribedInput {
  where: PlanWhereUniqueInput!
  update: PlanUpdateWithoutUsersSubscribedDataInput!
  create: PlanCreateWithoutUsersSubscribedInput!
}

input PlanWhereInput {
  """Logical AND on all given filters."""
  AND: [PlanWhereInput!]

  """Logical OR on all given filters."""
  OR: [PlanWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PlanWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  planId: String

  """All values that are not equal to given value."""
  planId_not: String

  """All values that are contained in given list."""
  planId_in: [String!]

  """All values that are not contained in given list."""
  planId_not_in: [String!]

  """All values less than the given value."""
  planId_lt: String

  """All values less than or equal the given value."""
  planId_lte: String

  """All values greater than the given value."""
  planId_gt: String

  """All values greater than or equal the given value."""
  planId_gte: String

  """All values containing the given string."""
  planId_contains: String

  """All values not containing the given string."""
  planId_not_contains: String

  """All values starting with the given string."""
  planId_starts_with: String

  """All values not starting with the given string."""
  planId_not_starts_with: String

  """All values ending with the given string."""
  planId_ends_with: String

  """All values not ending with the given string."""
  planId_not_ends_with: String
  interval: String

  """All values that are not equal to given value."""
  interval_not: String

  """All values that are contained in given list."""
  interval_in: [String!]

  """All values that are not contained in given list."""
  interval_not_in: [String!]

  """All values less than the given value."""
  interval_lt: String

  """All values less than or equal the given value."""
  interval_lte: String

  """All values greater than the given value."""
  interval_gt: String

  """All values greater than or equal the given value."""
  interval_gte: String

  """All values containing the given string."""
  interval_contains: String

  """All values not containing the given string."""
  interval_not_contains: String

  """All values starting with the given string."""
  interval_starts_with: String

  """All values not starting with the given string."""
  interval_not_starts_with: String

  """All values ending with the given string."""
  interval_ends_with: String

  """All values not ending with the given string."""
  interval_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  product: String

  """All values that are not equal to given value."""
  product_not: String

  """All values that are contained in given list."""
  product_in: [String!]

  """All values that are not contained in given list."""
  product_not_in: [String!]

  """All values less than the given value."""
  product_lt: String

  """All values less than or equal the given value."""
  product_lte: String

  """All values greater than the given value."""
  product_gt: String

  """All values greater than or equal the given value."""
  product_gte: String

  """All values containing the given string."""
  product_contains: String

  """All values not containing the given string."""
  product_not_contains: String

  """All values starting with the given string."""
  product_starts_with: String

  """All values not starting with the given string."""
  product_not_starts_with: String

  """All values ending with the given string."""
  product_ends_with: String

  """All values not ending with the given string."""
  product_not_ends_with: String
  usersSubscribed_every: UserWhereInput
  usersSubscribed_some: UserWhereInput
  usersSubscribed_none: UserWhereInput
}

input PlanWhereUniqueInput {
  id: ID
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  plans(where: PlanWhereInput, orderBy: PlanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Plan]!
  user(where: UserWhereUniqueInput!): User
  plan(where: PlanWhereUniqueInput!): Plan
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  plansConnection(where: PlanWhereInput, orderBy: PlanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlanConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  plan(where: PlanSubscriptionWhereInput): PlanSubscriptionPayload
}

type User implements Node {
  id: ID!
  customerId: String
  subscriptionId: String
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
  plansSubscribed(where: PlanWhereInput, orderBy: PlanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Plan!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  customerId: String
  subscriptionId: String
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  plansSubscribed: PlanCreateManyWithoutUsersSubscribedInput
}

input UserCreateManyWithoutPlansSubscribedInput {
  create: [UserCreateWithoutPlansSubscribedInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

input UserCreateWithoutPlansSubscribedInput {
  id: ID
  customerId: String
  subscriptionId: String
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  customerId_ASC
  customerId_DESC
  subscriptionId_ASC
  subscriptionId_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  customerId: String
  subscriptionId: String
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
}

input UserScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [UserScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  customerId: String

  """All values that are not equal to given value."""
  customerId_not: String

  """All values that are contained in given list."""
  customerId_in: [String!]

  """All values that are not contained in given list."""
  customerId_not_in: [String!]

  """All values less than the given value."""
  customerId_lt: String

  """All values less than or equal the given value."""
  customerId_lte: String

  """All values greater than the given value."""
  customerId_gt: String

  """All values greater than or equal the given value."""
  customerId_gte: String

  """All values containing the given string."""
  customerId_contains: String

  """All values not containing the given string."""
  customerId_not_contains: String

  """All values starting with the given string."""
  customerId_starts_with: String

  """All values not starting with the given string."""
  customerId_not_starts_with: String

  """All values ending with the given string."""
  customerId_ends_with: String

  """All values not ending with the given string."""
  customerId_not_ends_with: String
  subscriptionId: String

  """All values that are not equal to given value."""
  subscriptionId_not: String

  """All values that are contained in given list."""
  subscriptionId_in: [String!]

  """All values that are not contained in given list."""
  subscriptionId_not_in: [String!]

  """All values less than the given value."""
  subscriptionId_lt: String

  """All values less than or equal the given value."""
  subscriptionId_lte: String

  """All values greater than the given value."""
  subscriptionId_gt: String

  """All values greater than or equal the given value."""
  subscriptionId_gte: String

  """All values containing the given string."""
  subscriptionId_contains: String

  """All values not containing the given string."""
  subscriptionId_not_contains: String

  """All values starting with the given string."""
  subscriptionId_starts_with: String

  """All values not starting with the given string."""
  subscriptionId_not_starts_with: String

  """All values ending with the given string."""
  subscriptionId_ends_with: String

  """All values not ending with the given string."""
  subscriptionId_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  customerId: String
  subscriptionId: String
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  plansSubscribed: PlanUpdateManyWithoutUsersSubscribedInput
}

input UserUpdateManyDataInput {
  customerId: String
  subscriptionId: String
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyMutationInput {
  customerId: String
  subscriptionId: String
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyWithoutPlansSubscribedInput {
  create: [UserCreateWithoutPlansSubscribedInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutPlansSubscribedInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutPlansSubscribedInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithoutPlansSubscribedDataInput {
  customerId: String
  subscriptionId: String
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateWithWhereUniqueWithoutPlansSubscribedInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutPlansSubscribedDataInput!
}

input UserUpsertWithWhereUniqueWithoutPlansSubscribedInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutPlansSubscribedDataInput!
  create: UserCreateWithoutPlansSubscribedInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  customerId: String

  """All values that are not equal to given value."""
  customerId_not: String

  """All values that are contained in given list."""
  customerId_in: [String!]

  """All values that are not contained in given list."""
  customerId_not_in: [String!]

  """All values less than the given value."""
  customerId_lt: String

  """All values less than or equal the given value."""
  customerId_lte: String

  """All values greater than the given value."""
  customerId_gt: String

  """All values greater than or equal the given value."""
  customerId_gte: String

  """All values containing the given string."""
  customerId_contains: String

  """All values not containing the given string."""
  customerId_not_contains: String

  """All values starting with the given string."""
  customerId_starts_with: String

  """All values not starting with the given string."""
  customerId_not_starts_with: String

  """All values ending with the given string."""
  customerId_ends_with: String

  """All values not ending with the given string."""
  customerId_not_ends_with: String
  subscriptionId: String

  """All values that are not equal to given value."""
  subscriptionId_not: String

  """All values that are contained in given list."""
  subscriptionId_in: [String!]

  """All values that are not contained in given list."""
  subscriptionId_not_in: [String!]

  """All values less than the given value."""
  subscriptionId_lt: String

  """All values less than or equal the given value."""
  subscriptionId_lte: String

  """All values greater than the given value."""
  subscriptionId_gt: String

  """All values greater than or equal the given value."""
  subscriptionId_gte: String

  """All values containing the given string."""
  subscriptionId_contains: String

  """All values not containing the given string."""
  subscriptionId_not_contains: String

  """All values starting with the given string."""
  subscriptionId_starts_with: String

  """All values not starting with the given string."""
  subscriptionId_not_starts_with: String

  """All values ending with the given string."""
  subscriptionId_ends_with: String

  """All values not ending with the given string."""
  subscriptionId_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
  plansSubscribed_every: PlanWhereInput
  plansSubscribed_some: PlanWhereInput
  plansSubscribed_none: PlanWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
